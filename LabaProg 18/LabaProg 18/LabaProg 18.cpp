#include <iostream>
#include <cmath>
#include <locale>
using namespace std;
int main() {
	setlocale(LC_ALL, "Russian");
	int a;
	cout << "Введите номер задания ";
	cin >> a;
	switch (a) {
	case 1: {
		/*Дана квадратная матрица A порядка M (M — нечетное число). Начиная с
		элемента A(1,1) и перемещаясь против часовой
		стрелки, вывести все ее элементы по спирали: первый столбец,
		последняя строка, последний столбец в обратном порядке,
		первая строка в обратном порядке,
		оставшиеся элементы второго столбца и т. д.; последним
		выводится центральный элемент матрицы.*/
		int M, i, j;
		int** a;
		int k;
		printf("Введите размер квадратной матрицы\n");
		cin >> M;
		if (M % 2 != 0) {

			a = new int* [M];
			cout << "Введите элементы матрицы " << endl;
			for (i = 0; i < M; i++) {
				a[i] = new int[M];
				for (j = 0; j < M; j++) {
					printf("a[%d][%d] = ", i, j);
					cin >> a[i][j];
				}
			}
			for (k = 0; k < (M / 2 + 1); k++)
			{
				for (i = k; i < M - k; i++)
				{
					cout << a[i][k] << " ";
				}
				i--;
				for (j = k + 1; j < M - k; j++)
				{
					cout << a[i][j] << " ";
				}
				j--;
				for (i = M - k - 2; i >= k; i--)
				{
					cout << a[i][j] << " ";
				}
				i++;
				for (j = M - k - 2; j > k; j--)
				{
					cout << a[i][j] << " ";
				}
				j++;

			}
		}

	}break;
	case 2: {
		/*Дана матрица размера M × N и целое число K (1 ≤ K ≤ M).
		Найти сумму и произведение элементов K-й строки данной матрицы.*/
		int N, M;
		int** a;
		int h;
		int i, j; //i - строки  j - столбцы 
		int sum = 0, pro = 1;
		cout << "Введите размер матрицы M x N " << endl;
		cin >> M >> N;
		a = new int* [M];// M-строки N-столбцы
		cout << "Введите элементы матрицы " << endl;
		for (i = 0; i < M; i++) {
			a[i] = new int[N];
			for (j = 0; j < N; j++) {
				printf("a[%d][%d] = ", i, j);
				cin >> a[i][j];
			}
		}
		cout << "Введите целое число K " << endl;
		cin >> h;

		if ((1 <= h) && (h <= M)) {
			//K -= 1;
			for (j = 0; j < N; j++) {
				sum += a[h - 1][j];
				pro *= a[h - 1][j];
			}
		}
		cout << "Сумма элементов строки равна " << sum << endl << "Произведение элементов строки равно " << pro << endl;
		delete[]a;
	}break;
	case 3: {
		/*Дана матрица размера M × N. Найти номер ее
		столбца с наименьшим произведением элементов и
		вывести данный номер, а также значение наименьшего произведения.*/
		int N, M;
		int** a;
		int* b;
		int i, j; //i - строки  j - столбцы 
		int k = 0;//счетчик массива b
		int pro = 1;
		int n = 0;//номер

		cout << "Введите размер матрицы M x N " << endl;
		cin >> M >> N;
		a = new int* [M];// M-строки N-столбцы
		cout << "Введите элементы матрицы " << endl;
		for (i = 0; i < M; i++) {
			a[i] = new int[N];
			for (j = 0; j < N; j++) {
				printf("a[%d][%d] = ", i, j);
				cin >> a[i][j];
			}
		}
		b = new int[N];
		for (j = 0; j < N; j++) {//считаем сумму и запоминаем в новом массиве
			for (i = 0; i < M; i++) {
				pro *= a[i][j];
			}
			b[j] = pro;
			pro = 1;
		}
		for (j = 0; j < N; j++) {//сравнение
			if (b[j] < b[j++])cout << b[j] << " ";
		}
		for (i = 0; i < N; i++) {//вывод произведений
			cout << b[i] << " ";
		}
		cout << endl;
		cout << "Значение наименьшего значения равно " << b[n] << " а индекс - " << n << endl;
	}break;
	case 4: {
		/*Дана матрица размера M × N. В каждом ее столбце найти
		количество элементов, больших среднего арифметического
		всех элементов этого столбца*/
		int N, M;
		int** a;
		float* b;
		int i, j; //i - строки  j - столбцы 
		int k = 0;//счетчик массива b
		int sum = 0;
		int n = 0;//номер

		cout << "Введите размер матрицы M x N " << endl;
		cin >> M >> N;
		a = new int* [M];// M-строки N-столбцы
		cout << "Введите элементы матрицы " << endl;
		for (i = 0; i < M; i++) {
			a[i] = new int[N];
			for (j = 0; j < N; j++) {
				printf("a[%d][%d] = ", i, j);
				cin >> a[i][j];
			}
		}
		b = new float[N];
		for (j = 0; j < N; j++) {//считаем арифмитеское и запоминаем в массиве
			for (i = 0; i < M; i++) {
				sum += a[i][j];
				n++;
			}
			b[j] = sum / n;
			sum = 0; n = 0;
			cout << b[j] << " ";
		}
		cout << endl;
		for (j = 0; j < N; j++) {//сравнивем и считаем
			for (i = 0; i < M; i++) {
				if (a[i][j] > b[j])
					n++;
			}
			printf("Количество элемнтов больших среднего арфимитического в %d столбце равно %d\n", j, n);
			n = 0;
		}


	}break;
	case 5: {
		/*Дана целочисленная матрица размера M × N. Найти номер первого
		из ее столбцов, содержащих только нечетные числа.
		Если таких столбцов нет, то вывести 0.*/
		int N, M;
		int** a;
		float* b;
		int i, j; //i - строки  j - столбцы 
		int k = 0;//счетчик массива b
		int sum = 0;
		int n = 0;//номер

		cout << "Введите размер матрицы M x N " << endl;
		cin >> M >> N;
		a = new int* [M];// M-строки N-столбцы
		cout << "Введите элементы матрицы " << endl;
		for (i = 0; i < M; i++) {
			a[i] = new int[N];
			for (j = 0; j < N; j++) {
				printf("a[%d][%d] = ", i, j);
				cin >> a[i][j];
			}
		}
		b = new float[N];
		for (j = 0; j < N; j++) {//считаем количество нечетных чисел и сравнивем с колвом элементов с столбце
			for (i = 0; i < M; i++) {
				if (a[i][j] % 2 != 0) {
					n++;
				}
			}
			b[j] = n;
			n = 0;
			if (b[j] != N)b[j] = 0;
		}
		for (i = 0; i < N; i++) {//находит количество четных столбцов
			if (b[i] == 0) 
				n++;
				
		}
		if (n == N) { cout << "0\n"; break; }//вывод результата
		else {
			for (i = 0; i < N; i++) {
				printf("В столбце %d все числа нечетные\n", j);
				break;
			}
		}
		
	}break;
	}
	return 0;
}