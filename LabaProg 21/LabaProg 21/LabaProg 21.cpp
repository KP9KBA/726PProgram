#include <iostream>
#include <Math.h>
#include <windows.h>
#include <string>

using namespace std;
int main() {
	setlocale(LC_ALL, "Russian");
	int a;
	cout << "Введите номер задания " << endl;
	cin >> a;
	switch (a) {
	case 1: {
		/*Дана строка, состоящая из русских слов, разделенных 
		пробелами (одним или несколькими). 
		Найти количество слов в строке.*/
		string S = " ";
		int n = 0;
		cout << "Введите строку S: ";
		cin.ignore();
		std::getline(cin, S);
		for (int i = 1; i < S.length(); i++)
			if (S[i - 1] != ' ' && S[i] == ' ') n++;
		cout << "Количество слов в строке: " << n + 1 << endl;
	}break;
	case 2: {
		/*Дана строка, состоящая из русских слов, разделенных 
		пробелами (одним или несколькими). Найти длину самого короткого слова.*/
		string S = " ";
		int n = 0, b = 99999;
		cout << "Введите строку S: ";
		cin.ignore();
		std::getline(cin, S);
		for (int i = 0; i < S.length(); i++)
		{
			if (S[i] != ' ') n++;
			if (S[i] == ' ' || i == S.length() - 1)
			{
				if (n != 0 && n < b) b = n;
				n = 0;
			}
		}
		cout << "Длина самого маленького слова: " << b << endl;
	}break;
	case 3: {
		/*Дана строка, состоящая из русских слов, 
		набранных заглавными буквами и разделенных пробелами (одним или несколькими). 
		Преобразовать каждое слово в строке, заменив в нем все последующие вхождения его 
		первой буквы на символ «.» (точка). Например, слово «МИНИМУМ» 
		надо преобразовать в «МИНИ.У.». Количество пробелов между словами не изменять*/
		string S = "";
		char C;
		cout << "Введите строку S: ";
		cin.ignore();
		std::getline(cin, S);
		C = S[0];
		for (int i = 1; i < S.length(); i++)
		{
			if (S[i - 1] == ' ' && S[i] != ' ') C = S[i];
			if (S[i] != ' ' && S[i] == C && S[i - 1] != ' ')
			{
				S[i] = '.';
			}
		}
		cout << "Преобразованная строка: " << S << endl;
	}break;
	case 4: {
		/*Дана строка-предложение на русском языке. 
		Подсчитать количество содержащихся в строке гласных букв.*/
		string S = "";
		int n = 0;
		cout << "Введите строку S: ";
		cin.ignore();
		std::getline(cin, S);
		for (int i = 0; i < S.length(); i++) {
			if (S[i] == 'а' || S[i] == 'е' || S[i] == 'ё' || S[i] == 'и' || S[i] == 'о' || S[i] == 'у' || S[i] == 'ы' || S[i] == 'э' || S[i] == 'ю' || S[i] == 'я')
				n++;
		}
		cout << "Число гласных букв: " << n << endl;
	}break;
	case 5: {
		/*Дана строка, содержащая полное имя файла, то есть имя диска, список каталогов (путь), 
		собственно имя и расширение. Выделить из этой строки имя файла (без расширения)*/
		string S = "";
		cout << "Введите строку S: ";
		cin.ignore();
		std::getline(cin, S);
		cout << "Имя файла без расширения: ";
		for (int i = S.find_last_of(92) + 1; i < S.find_last_of('.'); i++)
		{
			cout << S[i];
		}
		cout << "." << endl;

	}break;
	case 6: {
		/*Дана строка, содержащая полное имя файла. 
		Выделить из этой строки название последнего каталога (без символов «\»). 
		Если файл содержится в корневом каталоге, то вывести символ «\».*/
		string S = "";
		int b = 0;
		cout << "Введите строку S: ";
		cin.ignore();
		std::getline(cin, S);
		cout << "Имя каталога, содержающего файл: ";
		for (int i = 0; i < S.length(); i++)
		{
			if (S[i] == 92) b++;
		}
		if (b == 1)
			for (int i = S.find_first_of(92) + 1; i < S.find_last_of('.'); i++)
				cout << S[i];
		else
			for (int i = S.find_last_of(92, S.find_last_of(92) - 1) + 1; i < S.find_last_of(92); i++)
			{
				cout << S[i];
			}
	}break;
	case 7: {
		/*Дана строка-предложение. Зашифровать ее, поместив вначале все символы, 
		расположенные на четных позициях строки, а затем, в обратном, все символы, 
		расположенные на нечетных позициях (например, строка «Программа» превратится 
		в «ргамамроП»).*/
		string S = "";
		string S0 = S;
		int b = 0;
		int i;
		cout << "Введите строку S: ";
		cin.ignore();
		std::getline(cin, S);
		for (i = 0; i < S.length(); i++)
		{
			if (i % 2 == 1)
			{
				S[b] = S0[i];
				b++;
			}
		}
		for (i = S.length() - 1; i >= 0; i--)
		{
			if (i % 2 == 0)
			{
				S[b] = S0[i];
				b++;
			}
		}
		cout << "Зашифрованная строка: " << S << endl;
	}break;
	}
	return 0;
}